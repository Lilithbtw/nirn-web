version: '3'
networks:
  web:
    external: false
  cloud:
    external: false

services:
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.myresolver.acme.email=${CF_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"  # Uncomment for testing
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    networks:
      - web
      - cloud

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./src:/var/www/html
      - ./default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`${DOMAIN_WEBSITE}`) || Host(`www.${DOMAIN_WEBSITE}`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.docker.network=web"
    networks:
      - web
    depends_on:
      - php-fpm

  php-fpm:
    image: php:8-fpm
    restart: always
    volumes:
      - ./src:/var/www/html
    networks:
      - web

  nextcloud:
    build:
      context: .
      dockerfile: Nextcloud
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      - nextclouddb
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${DOMAIN_NEXTCLOUD}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.docker.network=cloud"
    volumes:
      - ./nextcloud/src:/var/www/html
      - ./nextcloud/custom_apps:/var/www/html/custom_apps
      - ./nextcloud/config:/var/www/html/config
      - ${NEXTCLOUD_DATA}:/var/www/html/data
    environment:
      - PUID=1000
      - PGID=1000
      - NEXTCLOUD_TRUSTED_DOMAINS=${DOMAIN_NEXTCLOUD}
      - OVERWRITECLIURL=https://${DOMAIN_NEXTCLOUD}
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=${DOMAIN_NEXTCLOUD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=nextclouddb
      - REDIS_HOST=redis
    networks:
      - cloud

  nextclouddb:
    image: mariadb:11.4
    container_name: nextcloud-db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./nextcloud/nextclouddb:/var/lib/mysql
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - cloud

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./nextcloud/redis:/data
    networks:
      - cloud
